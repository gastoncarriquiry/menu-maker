// Custom Theming for Angular Material
// For more information: https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use './theme/theme-colors.scss' as colors;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
@include mat.core();

// Define the light theme
$light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: colors.$primary-palette,
      tertiary: colors.$tertiary-palette,
    ),
    typography: (
      brand-family: 'Roboto',
      bold-weight: 600,
      medium-weight: 500,
      regular-weight: 400,
    ),
    density: (
      scale: 0,
    ),
  )
);

// Define the dark theme
$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: colors.$primary-palette,
      tertiary: colors.$tertiary-palette,
    ),
    typography: (
      brand-family: 'Roboto',
      bold-weight: 600,
      medium-weight: 500,
      regular-weight: 400,
    ),
    density: (
      scale: 0,
    ),
  )
);

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  color-scheme: light; // Default to light theme
  @include mat.theme(
    (
      color: (
        theme-type: light,
        primary: colors.$primary-palette,
        tertiary: colors.$tertiary-palette,
      ),
      typography: (
        brand-family: 'Roboto',
        bold-weight: 600,
        medium-weight: 500,
        regular-weight: 400,
      ),
      density: (
        scale: 0,
      ),
    )
  );

  // Add component themes on top of system tokens
  @include mat.all-component-colors($light-theme);
}

// Explicit dark theme when dark-mode class is applied
body.dark-mode {
  color-scheme: dark;
  @include mat.theme(
    (
      color: (
        theme-type: dark,
        primary: colors.$primary-palette,
        tertiary: colors.$tertiary-palette,
      ),
      typography: (
        brand-family: 'Roboto',
        bold-weight: 600,
        medium-weight: 500,
        regular-weight: 400,
      ),
      density: (
        scale: 0,
      ),
    )
  );

  // Add component themes on top of system tokens
  @include mat.all-component-colors($dark-theme);
}

/* Global styles */
html,
body {
  height: 100dvh;
  overflow-x: hidden;
}

body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* PWA specific styles */
.pwa-container {
  min-height: 100dvh;
  display: flex;
  flex-direction: column;
}

/* Success snackbar styling */
.mat-mdc-snack-bar-container {
  &.success-snackbar {
    background-color: var(--mat-sys-primary) !important;

    .mat-mdc-snackbar-surface {
      background-color: var(--mat-sys-primary) !important;
    }

    .mat-mdc-snack-bar-label,
    .mdc-snackbar__label {
      color: var(--mat-sys-on-primary) !important;
    }

    .mat-mdc-button.mat-mdc-snack-bar-action,
    .mdc-button.mat-mdc-snack-bar-action {
      color: var(--mat-sys-on-primary) !important;

      .mdc-button__label {
        color: var(--mat-sys-on-primary) !important;
      }

      &:hover {
        background-color: rgba(255, 255, 255, 0.1) !important;
      }
    }
  }

  &.error-snackbar {
    background-color: var(--mat-sys-error) !important;

    .mat-mdc-snackbar-surface {
      background-color: var(--mat-sys-error) !important;
    }

    .mat-mdc-snack-bar-label,
    .mdc-snackbar__label {
      color: var(--mat-sys-on-error) !important;
    }

    .mat-mdc-button.mat-mdc-snack-bar-action,
    .mdc-button.mat-mdc-snack-bar-action {
      color: var(--mat-sys-on-error) !important;

      .mdc-button__label {
        color: var(--mat-sys-on-error) !important;
      }

      &:hover {
        background-color: rgba(255, 255, 255, 0.1) !important;
      }
    }
  }
}

/* Offline mode adjustments */
.offline-mode {
  filter: grayscale(0.3);
  opacity: 0.9;
}

/* Install prompt styling */
.install-prompt {
  position: fixed;
  bottom: 16px;
  right: 16px;
  z-index: 1000;
}

/* Loading states for offline content */
.offline-loading {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.4) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    animation: shimmer 1.5s infinite;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .install-prompt {
    bottom: 80px; // Account for mobile navigation
    right: 8px;
  }
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .offline-banner,
  .update-notification {
    border: 2px solid currentColor;
  }
}
